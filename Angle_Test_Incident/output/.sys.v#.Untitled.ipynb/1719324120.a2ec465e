{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "373d292a",
   "metadata": {},
   "outputs": [],
   "source": [
    "TFile *file = TFile::Open(\"outfile_2.root\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "ae0c3ca4",
   "metadata": {},
   "outputs": [],
   "source": [
    "file->cd();\n",
    "Normalized_rate->GetN();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "9d04d41a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Angle, rate of photon is 0 , 1\n",
      "Angle, rate of photon is 15.1663 , 0.99131\n",
      "Angle, rate of photon is 31.3948 , 0.973831\n",
      "Angle, rate of photon is 41.0468 , 0.967604\n",
      "Angle, rate of photon is 43.4633 , 0.986121\n"
     ]
    }
   ],
   "source": [
    "\n",
    "//TF1 * func = TF1(\"func\", )\n",
    "float xval = 0;\n",
    "for (int i = 0 ; i<Normalized_rate->GetN();i++ ){\n",
    "    //xval = Normalized_rate->GetX()[i];\n",
    "    //float theta = TMath::DegToRad()*xval;\n",
    "    //float var = (TMath::Cos(theta)-1)/TMath::Cos(theta);\n",
    "    cout << \"Angle, rate of photon is \" <<   Normalized_rate->GetX()[i]<< \" , \"<<  Normalized_rate->GetY()[i] << endl;\n",
    "   // Normalized_rate->GetX()[i] = var;\n",
    "    //Normalized_rate->GetEX()[i] =0;\n",
    "}    \n",
    "    \n",
    "//Normalize_rate->GetXaxis()->SetXTitle()\n",
    "\n",
    "//expf->SetLineColor(kBlack);\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "c4dcd959",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAArgAAAHYCAIAAAApvgy/AAAABmJLR0QAAAAAAAD5Q7t/AAAgAElEQVR4nO3dP5LcxvXA8YaKkUoqkoEzyvXzDawTAMikxOVTSLIUylWWmACIFClUuWpv4QsIDV9APAJL2swBycQM8Quett1ooDGz8wfofvP9BKzdIQbTwOxOv+1+/boYx9EAAAAs+WDvBgAAgHQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIIlAAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIIlAAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIIlAAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIIlAAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIIlAAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAFIECAACIerJ3Ay6sKIq9mwAAuGnjOO7dhEvSFigYde8QACAj+v5eVRgoxN4kAggAAB5LYaBAQAAAwKWQzAgAAKImgYK1tqqqYmavxgEAgH1Nph7qujbGNE1TVdU+zQEAACkJcxT6vidKAAAAovBT/4qiyD0TUMElAADypa8bmuQoMJwAAAB8k8CnqqphGOYHZRQc6QvlAAAZ0dcNTXIU2ra11u7UEgAAkBxtgc/KYk5lVwoASJC+EYWw4FJQSqFt2z1adZYxYu92AQCQn0ng07Zt13VlWUpKo7V2GIayLDOaj9AXygEAMqKvGwqXRzZN448iWGvrus7omvW9QwCAjOjrhg7XUSiKIqNlk/reIQBARvR1Qws5CvODcokSAADAZU2WRzZNU9e12+vBWispC/s0DQAA7C0cIZF8RvdtXpmMRuOYDwAgI/q6IXXXo+4dAgBkRF83FO4eqUCs5pKydw4AgA18YIwpikKSEoqIndv4SBRcAgDgUp4Y709telMAAOCbLI9cLNicYxVnAABwEb/nKMjSBlnvEFRN6LquqipKKQAAcIN+T85cSURIfIVk27b+mIe+dFMAQEb0dUO/Tz24dL95DmDKUYKUhLLW3t/fv3z58vnz58aY58+ff//99/f393u3DgCA7E1yFIIgKPEQoaqquq6NMf/5z3++/PLLN2/e/Pzzz8aYvu/fvXv3xRdfECsAAHCmSaBgrfXXQ7ZtWxRFsuFCVVVN0xhj/vWvf/3xj3/88ccfP/30U2PMn//85x9//PH//u//fvrpp73bCABA3sLdI4OMBKnonPJ0S1EUH3300b///e9PP/3Uz7T45Zdfqqp6+/btjm0DANwafTkKYaAw31E68W2mJTh48+bNs2fPTq4NpexNBQDsRV+gEG4znaOPPvro9evXKwfEajVStBEAgHWTQKEsy7qu/akHGUhIdjhB/OUvf7m7u3v//n2sy8+xEDUAACkIkxklVnC7PAzD0Pf9Xo070l//+tfXr19/++23r169Msb88ssvX3/99fwwwgUAAB4rnHqw1o7j2D8YxzHx4QRjzB/+8Ie7u7unT5+68Y+PP/74119/XRxgIFwAAOB4CzkX1lqpUpB+iGBmuZaLWSRsPA0A2Ia+ZMYnwfd+nyp1D5umSXlfqGPej1iZanlE2TsKAMAFTaYepI7COI5SyKht26ZpZKcoBWILHJiMAAAgZiFHwf9WxhKSLc54AsIFAACOdyBQ0IpwAQCAY0xyFGRtpN+DZlFHIXB86iK5CwAArAuTM6uqGobBfyTl+s1zJ6ebsjICAHA+faseossjjTG5rJD0nfkOES4AAM6hPFBo23a+EnLxwWRd5B1aSVNQ9vYDAC5LX6Dwe46CDCHISshgFKHruhyHFs4Ry10wpC8AAG5MsdIpOhn1ixcP5RhdAAAcT+2IggsXlF3e+dwNYXEEAOAGTeoo0OetoPQCAOAGhQWX2raVnq9tW9kaao9WpYtwAQBwUyaBQtu2sgtUWZbyyDAM9H9zhAsAgBsxSUpwWzbLekj5N9jHOXHb5x5SegEA4OjL9gu3mc4lIFix8TtEHWgAgGILOQr+t65E40bNyRaTEQAAlSYjCn3f13XtNpCUlAWXr4CDGF0AACgTTqVYa9u2dftCNU2TUf1mk9LkELkLAHCD0umGLkXd9ST2DhEuAMBNSa0bOt8TM8tLmMtrUCEpTEYAALL2xDxkLAo36eCQo3C+9XDBEDEAAFI1CRRk5MCPGySfcftmqcSmlACA7CwXXJocQcGlK8ilnQCAR9GZo6BMFu8Qm1ICALIwKbhUlmVd1/4jMpCQy3BCjqjUBABI2WREwVo775/6vt+2SbeIxREAgDSFUw/jOFprXeVmxhK2RLgAAEiNtpwLNVkkVGoCgByp6YaccFMoJILcBQBACggUkka4AADYF4FCBggXAAB7IVDIBuECAGB7k0DBWltVVTGzV+NOM29/jlcRQ7gAANjSZHmkVFtqmmanxlyGsnTTRSykBABsI6yjkNG2DmBTSgDAtYWbQuXetSi4hNOwyxQApEBfNzTJUWiahuGETMVyFwzpCwCAM4R7PQzDMO9UzgmO2rY1h6pBt20reZRysN+exWLSwanatiW+EWxKCQC4rEmgcNnNHay1dV2XZWmM6bquaZogDhDSgZVl2XVd13WuJ6uqahgG93SXPCHRjDyOGLIdAQAXccWpFNevG2PatvWDAP+YYRj84MA8DCTUde2CA//psVMJfZND52PbCADYjL5uKCy45JdSqKpKuvnTDMPghhDki/nZhmHwV2O2bTsMgzvSDW/4T7fWMpzwKJReAACcLCy45EopSP9d1/XifMFBQU/vP3jwWQf/VxIpxDmhzE0hXAAAnGL0GGOapvEf6fs+OOZI8ycaY8qyDA6TcMQ/Rr6Vp7vGyBCCfCvH9H3f97083vd9cIZzbsIt4D4AwJXo+ywNpx6C8QM/z+B880zJtm3LsnTDA25Ooaqqpmm6rvP/3pWnS7sl71KmIYI2n3AXLnJ1GYldNaMLAIDAQo7Cxi2w1srwwDiOfpfftu04jvL4SqskHXKDdupDuAAAOCgsuCRJCS5tUDqME9ZMLg5FzM8jCxzcskwZYJD/cgUYzDTjYZ73QG7jOQgXAABrgkH4YEeoeVbB8aT/9k/rv4oMFcjj8rXkJbiEA+PlKPgt8b8OUhlGjZNDWzryhwQAEKPvMzN6PX6G4Oln97gTBgGBPx7gd/l+yOLHK/L0xaeMGt+h7REuAMDJ9H1aTupCLBZOkMrKJ1dsXFwnefwxsf+KPa6v0sVeKNMEACfQ1w39fj3S4y6WRh6GIaO9p/W9Q/tiU0oAeBR93VC46mGOLSVvmYw7Lf4X2Y4AcAsOTz3khb+Ar4d7CwAH6RtRWL4eFy5kN5ag7x1KEOkLABCjrxt6Enw/r1+UUYICtjGyhzUA3IxJjoJECf7CyLIsZZsoIBBLXyB3AQA0mYyQFEUxHz9YfDBZ+sZ8ssBkBAAIfd1QuOohl4AASWF0AQC0OhAo+BsuAOsIFwBAn0kyY9/3dV277Z4lqzHY/QFYR6ojAGiyMJXido+sHmzfrJPpmxzKGrkLAG6Nvm5I3fWoe4cUIFwAcDv0dUNhHQU3nODLq1wj3VJqmIwAgHxNAgWpozDfFyovdDxpIlwAgBwdrqOQF31jPiqxbQQArfR1Q2GgkPvlKbiE20G4AEAffd3QpI5CWZZSOAHYAHtYA0D6inEc/bkGqZ0QpClklMyoL5S7HWShAlBAXzcUrnrIPZMR+SLbEQASpC3w0RfK3SZGFwBkSl83FO71YK2tqkpmiKuqymjSAZqwbQQAJGIy9WCtrevaPOzvIN+WZUm4gF0wGQEAuwuXRzZN4y98kFgho09kVtxpxWQEgCzom3o4XEchrypM+t4h+AgXACROXze0kKMwPyiXKAHqPTZ3QZb7AgBONgkU+r6v69rtC2WtLYqCBZNIzcFw4f7+/uXLl8+fP6+q6vnz599///39/f3mzQQADcKph/Wj05+D0Dfmg3WxH9qvvvrqiy+++NOf/vT69eu7uzv598WLFxs3D8Ct0dcNqbsede8QDjqYwfr+/ftvv/326dOnP/zwg388PyoALk5fN6TuetS9Qzjo4EjYOI6vXr369NNP549frVEAbpS+bigs4QzoUxTF27dv924FAGQpXPUAKPDLL78Ejzx79myXlgBA7ggUoIeshvjuu+/u7u7++9//zkf/Vja2BgAs+sAY40ox+jUZ81VE7N0uXMv4QL795ptvXr9+/e2337569SqYcZCfhOB4AMCKYhxHqdxcVVVd133fzw9KfEmkT18WCU5wf3//008//fOf/3z37t3Tp0/fvXsXHMAPCYAr0dcNFeM4tm3bdd3KQRlds753COeQ3VDN0soIfk4AXIO+bigsuJR+SaV1+t4hXFAQLvCjAuDi9HVDk+WRW16b5ENUVbUSl0gx6aqqguQJa60UmV5/OhCQiTb3rb7fZwC4uIVNofwEwGukN8pLSGcvW0ssHlYUhUyIdF3nf7hLLoV7+uIuVkBMEBmQ5QoA6yZ/UUmyQlmW8pe6tVa+vWxnLGMAck55xflfdVVVDcPgHndPkeDAzY/Mn87fiDgGcxAArkRhNzR6jDFN0/iPyCKI8aKMMX3fx75dbIlrRtM08zYHZ7tsa6HVyi8CAJxM3+dJOPUQTAT4f/1fhMstmD948Fmn/S+waGQOAgCOcCBQENdOGJz39E3T+Cs23dduxmGlYbGCSysufkXIwjxW4IcBAAKTQEG6Z1lrYK1t27YoirIsr92IeX/ftm1Zlq4jd22oqkoa6X+mB08/YVzl2heIZM3ffWIFAPBNlkfKX+pd17m/4Jum2auus78GUnIYXSPdsknDxzrONk7XTBqVuUgAcKodPhCDsk6LVZ6CVIZgoYSLXSSAGFn1gEtgKQSA8+nrhnbYPbIsS394wHgBgQwVmIcIwH09DIMLDmRyRL6u63qDmRHcCNIbAWBun8DH/wh2wwlBjQQppSDH+DMg/s4U8xoP+kI5bIxxBQDn0NcN7XY9i+skjz8m9l/63iFsj1gBwMn0dUPqrkfdO4RdECsAOI2+bmghR0EWRlLFCLeMfAUAEE+C7/0PRNnrIfeNp4HTjLOtJg1DCwBuz2SExCUVSuZg27bB5kzpW/nLL6OrQDrmP1H8IAFYoW/qYTKiMAyDbL/kuC2hMxpUUPYOYV+UYwJw43aoowDkZV7nm5QFALdjEiiUZRkUbA4KIgE3i1gBwG0KB1HnH395JTMyLIyrYtkkgHX6uqFw1cM4jm43JhPZdRq4WfOlEMo+EQAgMPmY8/dbWn8wWXxwYwOMKwCI0dcN/X49MoQgWy0ER/j7L6RP3zuENBErAFikrxv6/XrWM7MyumZ97xCSRYkFAHP6uqHfVz24BWB9348zu7YQSNT8V4OlEAD00Rb4UJkRG2NcAYBP34hCuOrBPOQrOHnlKBg+prGt+eSdvo8JALcsXPXQdd38oIw+9fiMxl5IbwRgNHZDk8qMXdc1TeMnKzRN0zTNTm0DckLpRgAqTQIfFwe53SNNbsFRXq2FPowrADdOXzcUbgrlEhT8TIUgawFADOMKAJSZJDOWZSmpi23byu7SO7UKyBhlngFoMhlRsNaWZSnxgQQNdV2XZZnRkgcgBfNxBYYWAGRK2986/PWGdFBiAbhB+rqhyYiCjumGImLvduHmULoRgAKTwEemGLKOFfSFclCApRDA7dDXDU2ux1q7mJTANtPAmYgVgBuhrxsKRxSGYZgflNE163uHoAaxAnAL9HVD6q5H3TsETYgVgDMNw1CW5d6tWKOvGwoLLgG4HsoxAae5v79/+fLl8+fPq6p6/vz5999/f39/v3ejbgWBArApYgXgse7v77/88ss3b978/PPPb9686fv+3bt3X3zxBbHCNrSNkOgb84FKlFgAjvfy5csffvhBvg42dk/wF0dfN6TuetS9Q9CKWAE40srAW4K/Nfq6oSfzh1wdBSo3A9cTbAlhNH6+AOd79+7dyv++ffv22bNnmzXmNoUfTO6Tq2kaY0zXdX3fZxQx5BV4AoalEMAheX2w64v4J8mMEhCM4yhRQtu2sjXULi072Rixd7uAZaQ3Auu+++67vZtw0yaBwjAMfd/7j8g0RNZFnYH0ESsAK7755pvPP//cf+Trr7/+7LPPfv31172adFNYHgkkgVgBiHnx4sXd3Z3/yMcff3x3d/fJJ5/s1aSbMklmLMuybVt//EB2ecgoRwHIV5DeqG+mEzjZixcv3Nf8XmwsmszonJnM6EKNlZNIdFJVVbD7lLVWopbg6fM9q9wjfLYid+Q2AotSrp3g09cNhVMPksnYNE1Zlk3TjON4cpRgrS2KQjr7uq5jW1AWRdF1nTGm6zr/I7Jt27qu50+31i7uXAXoMI/dmYYAsKMrBj4SYciQQNu2XdfNX0v2q3SP+08pisINZvhPj51K6AvlcJsoxwQEGFHYS7g8spiRYf8TFj4Mw+CGAeSL+UmGYZClmO6wxdECf1TDWpv41mHA+eYfNIwr4Jbx87+jhToKxhiZd/D747quHzUH4XIL5g8efJZrg+QuyNSD35hhGFwcw9JNaDWv/8FnJYDtTUZIZPDATyaQTtptwnH8cIr/xN9fqSjKsgz69WAeQT4Hg29F8KDUe5ARCD/d8rRPUmXDRFCG9EYgl3kHo37qwZ8sEH7SgDm78tJ8TEKKP7rhAX/YoCgKyaYcx1GOkcflETchIgMP/jljlRlXnHNRwLUxrgBgR+Gqh+1H8q21fd/3fT+OY5DT4K908L/1STrkBu0EdkSsAGAvk4JLTdPUdd00jRtI6LquLEtXxuD4NAV3hpX6B2aWyiADDAfP7Ecz5DbiRlCOCcA+gkF4fw2CMaYsSzf4/9jxfOm//dP6ryJDCPK4fC1pB/7XburBP8xvVXCY/O9j2wlkZP33F9Aqo5/5LBr5KNe9Hv8TTbr5cRoQjA/xhPC7/CBkcf8VbFvlP2XU+A4BgYPhPqBMXj/tWTTyUQ6PXvqFj06wuE7y+GNi/xV7nPFY3ALKMeGmLK6AS5a+bmhyPbKmcX5QRtes7x0CFhEr4HZktDbSaOyGJqsepK6Rm/jv+14qL+3UNgBRMiToP8JSCADXMAl83CyDX3kpr+Aor9YC56McE9RjRGFfYR0FMV+CuE1rLmK+XQX770ExxhUAXFUYKMgoQtZVjGJ5m3u3C7gWYgUoxs/z7iaBQt/3UsW5qipXWdk8ps4SgF0QKwC4krWplGNWNqZG3+QQcDzyFaBPXgkKRmM3FG4z7acjuMrNALIwH1dgaAHAmcLdI/PKWwQQmP8pQ6wA4ByTTaH6vpeCS8FAAuMKQEbG6fZRRuNYKIDNhHUUFg/K6COGD0TAIWUBucureLPQ1w1NRhSUXRtw40Z2pgZwtieLj+a43sFRMC4CXAqxAnTg53ZHYcGlqqqKoqjr2lrbtm1RFNmlN1JwCfBRYgHAOcLlkcMwjOMoG0G1bVuW5eJ+kgAyQqwA4GTh8kjZOtKR4YTsBhUABCixAOA0C1MPezQDwNVRYgHACSaBQlmWQaDg9ojarkUAroZYARnhhzMRYQr0/I3p+z6jQIGkbuAYlFhA+nIsomA0dkPh8shxHNu2dcsjZUQBgDIsm0RG+OHc1+TTwVqb0eDBIj7vgOMxroCUZbdvpNDXDU1yFOq6Looi2EMSgFYsmwRw0CRQcBUUJGLIdN6hiNi7XUCKiBUArIuOkEimwjAMZVlmNMCgb8wH2ABzEEhNppmMRmM3FNZRcKqqknyFYRi2aw6APVCOCUBMGChIPqPb7qFpGmWREYBFlFhAmuiDdjdZHuk+F5qmyTRBAcDJgjWTRuMgKoDHmgQKxAfAjZOwgBILAJzJ1MM8SpCdprdrDoAEsBQCgBNWZhRuycPGrQGQCEo3AhCTEQWXydh13TAMksnIpwNwmxhXwF74YUtKMY6jtbZtWzd+0DSNFE7IqHyCw989wGVRYgHby7eIgtHYDX1gjKnr2h8/aNs26x0fqMwIXBDjCtiRsh43U//LUei6zizlM2aHHyzgsub5CoZfNOBmfGCMGcex7/umabqukz++c5x0AHA9lGMCblY4lTLPV8hrjEHf5BCQjnlwwK8briHTDaaFvm4oej1+xHCNa5b4w+0oETtGFmIEwYq1VsY85k/X9w4BqSG9EVeVdSaj0dgNrW0KZa11G09fkLVWZjestXVdx0YsZJWmMUYmRNzjbdvKPhTrTwdwJaQ3Ajdlh8BHxgBkSKBt267r5m2oqmoYBve4/5SiKPq+l0fmT9cXygFpYlwBV5L1vIPR2A1FRxSuZxgGNwwgX8xzJ2W5pvvWT5vwZb2ME8ga4wrAjdg6UHC5BfMHDz5LlGUpuQsy9VCW5aXbCOAoxArALdh6hER692CyoCzLIFYI5hSCddsrqS6nfVQpGyYCtsQcBC6LqYfU7DD1MDefQWjbtixLV1TRHzYoisIVkZRjgueOj3ftCwQUmwfrDC0Amnxg4jWP9y1+bK3t+77ve6kqLQ/KF+5blxG5Q/sAPKAcEy6Fn5wE/V6ZUfR9b4xpmka6Z/ftBV/PX78QPOiTFARXJkEGGC7YDACXRawAqBWMwEuIEDx4wmD+Cuny5WuJQtx/uRhFHvfjlSB28Z/ut/nirQXwKCufMMBBCn5ysm78ojBQWDhiKXo491U97uR+QDA+xBPCRQbjrACU/1+xSwCwJWIFnEzBj03WjV80Sc6UPEF/yn++SOFSFtdJHn9M7L/0pZsCOWIpBE6T+5IHo7EbmlyPhAXmIS/BWjsMw3ztYsr0vUNApogVcAIChQSt7R4ppY3yqn6o7x0C8kWsgEfJfTsooa8bUnc96t4hIGvECjgegUKawoJLbdtK7QS3xfMerTpLUtUggBsXfGLyy4hjKOtoczcJFKRwctM0bsXBMAzZxQqxvM292wXcqPlvH7ECkJFw1YPs4OwXQPS3dU6fvjEfQIfFauu7tATJUpDJaDR2Q+HUQy4BAYC8zAf2GFcAsrCQozA/iOgBwEUQKyCGH4ZkPfG/6fu+rmtXNUFSFthkAcAFjePodwn6xmkBZdbqKBhjgkKN6eNDB8gCyyYR0JGgYDR2Q+quR907BGhFrAAfgUKywuWR82rNzBsBuAbyFYAshMsjzWy6Ia/gKK/WAmDZJAQjCskKVz00TdN1XdbLHKjMCGSEckxA4hbqKIzjOAxDvr+rVGYE8kKsAN7xlIWBghjHsSzLoigy2mAaQL4oxwQkazlQMMZYa5umqet6y9YAuGXECmD0N0GTQCHY06Ft277vKbgEYDPECkBqtCVn6ks3BW4QJRZujZolD0ZjN/SBMcZtF1lVFesFAOyOcQUgHU+MMVVVyYyD+wIA9sWWELeDQDBx2n73+DQBNKEc0y3w32UF76++buiJiWwt7ctrXygAagTjCkbjpzAc3tk0FfPfw7mM3ryVa8noKgD4GFfQTVMmo9EYyz4xWt4bR9nlAJBfalIWgF1ECy45VVVRnxHA7lgKAexiEihYa+crJIdh2KtxAOAjVgC2NwkUpGBz0zTyr/uCNZMAEkGsoAzvYPom83xFUUgVZynBJPFBXnOBebUWwGko3aiGsrWRRmM3tJyjEOQlkKMAICmMK+ijrHPVJAwUXC3nrut2aA4AHGceKxAuANcQ7h45DIM/6SC/eOQoAEjQ/G9QYgXg4tamUmR0Ia+yjBRcAm4N5ZiypqzaktGYo6DuetS9QwCOQXpjjvRlMhqN3dDhOgoM5QFIH+mNwJU88b/x6ygAQF7YmTpfvFMpexJ8L3UU9mgJAJyLWAG4uDBQuDi33nIl/mjbVmY9XOKktXaeROkOCE7llmkAALECcFmTQKHv+7qu+74PDjqtG7bW1nVdlqUxpuu6pmkWF1DIr3RZll3XdV0X+5V2W05Ya4dhkNMCwByxAnBBk9+ftm0X6yyd9jsm4YVUdZQzz89TVdUwDO5x/yk+iTnksNipBJ8IAATLJtOnb22k0dgNhXs9xP7uP+XUDztHLH67+Ip+QBA7VSyYcEcqe4cAnIxYIWUq10Yajd3Qcgnn80lHHoQFB/eMWDygbduyLP1TDcPglm6yDwWAGEo3AuebBD5u38jzzzsfGyiKoizLoF8P5hHkd3i+HjoYmTDGSCJF27bDMMz/97GURX8AApRjSpDKeQejcURhOUchSBU84a/2xUBhcV5D0hTk67Is/ZQFc2iiYX6AvncIwEUQK6SGQCEX4fLI7VcTWGvdPIWEF/7/yoDBytPZ6BLAMVgKAZzmir8qxyQzBqkMwfDA4gIHiSf8bw0jCgCOw7hCOhhRyMUkmfGyuYFlWbrhgaBQklRYMg8zFO5r2eTancFaOx/hGIbBnUeeQrUlAEdiS4hEcOdzMnrKsizLcrwc/4X6vpcHZSrBfeuHAk3TBE8PHnFPX3nKBdsPQKWVj0FsQ/H913dFkxESlyIQLEc8Zx3E4jrJE4458in6xnwAXEOsxAKFX7ehdd7BaOyGwuWRiwdlVKtA3zsE4ErmscKzZ8/evn377Nmzr7766ptvvnnx4sUuDbsFBAoZUXc96t4hANczjxXevHnz+vXru7s7+ZdY4UoIFDKycD0u07B6sH2zTqbvHQJwVYtzEO/fv//www/dt5s3Sj8ChYxEcxTMw4aNF9z9YQMrmbTK3jkAF7H4oTF6RRf46Lg4rbs8COWBwrzK8vpWjQnS9w4BuKqD6/T4SLk4AoW8hIHC/PIWCyUlS987BOCq/JGD2OjCti3ST/dojb5uKNw9MqMFDgBwQe/fv1/8fJeNardvD5CISaAgtRTnBZJzGU4AgMcax/G33377/PPPv/3221evXr19+/aXX36ZH0a4gJs1CRSkZHJd18WDg3syAUDuXrx4cXd39/Tp06qqnj17VlXVP/7xj19//dXvQzQAAA8gSURBVHV+JOECbtDyVIobVMhuLEHf5BCALVlrg889EhcujhyFvKi7HnXvEIAUEC5ciu4lD0ZjN/TEsDoIAA6Rj8Hg01K+5RMSuj0xxjRNs/h/sonztu25gFjcwy8zgDMtLqEkXDgNdywX0RGSqqpkF7W8FkzqG/MBkCD+IDmZ7gQFo7EbCusoGGOstW69Q15RAgBsYxzHWNGF7RsDXNWT4PtMBxIAYHskLuAW/G9EoW1bBhIA4LEWRxeouLCIe5Kj3wOFqqq6rmuaZhzH7GonAMDuKP8MrQo/iVd2l57LaIBBXxYJgLyQ57hCfSaj0dgNPTHx+AAA8FiLiQuG3AVkS1vgoy+UA5Av6jkGGFHI0cLySADARZDnCAXC5ZEKMEEIICmsokTWFAYK/OIBSBDlnxlHyRRTDwCwkZV6jnSiSBaBAgBsivLPNzKCogaBAgDsgDxH5IJAAQB2Q7iA9BEoAMDOSFxAyggUAGB/6vMcdVzFbSJQAIBUqA8XkCMCBQBIi+5lESx5yI7CgktUZgSgAPUckQiFgQK/QgDUIFzA7ph6AIDUkbiAHREoAEAGyHPEXggUACAbmeY5Jt48rNstR6FtW2NMVVVVVa0cY62tqkoONsZYa93Xjn8AAKhH4gK2tMOIgrW2KAprrbW2rutYH18URdd1xpiu61ai0WEYrLXXaSkApCvH8s/EMTkqtn/bZAhBeve2bbuum7ehqqphGNzj/lN8Emr4Ty+KHa4IAHaU/ppw18J0mnQ9+rqhHa6nKIq+792MQ/Cte7BpGn/GIQgIYs/V9w4BwDFSDhcIFLK29dSDjAoEYcHBuYPFA9q2LctyJcUBAG4HyyJwJVsHPouTBWVZBqFAMCWxmKQTG4o4oVXKoj8AN27xk3CvDzq/MbfwYcuIwlXMRwVktKB4UJbl/Cmx4YTx8a5zWQCwjxzzHJGsdEs4y7IIY0xVVTIO4f/vMAx93+/TMgDIQWqrKPmrLFNbBwpu/YI/GDAfGAhSGWSAwf2vq8FwtWYCgBLjOM4HEii6gOPtMPVQlqUbHgi6fKmwZB5SGdzXwzD45RastfPJCADAIvIccY4dph6k4JL76XQzCNbaruskaJCIwcUTTdP44wfDMDRNs2WbASB3izMRRmPyHS5rt5+PxXWSJxwT4CceAA7abFnErS15MBq7IXXXo+4dAoAr2SBcIFBQIInlkQCA7W2ZuKCs77wp6S6PPFnKdUwBICkriQuGj00YY1QGCvxkA8CjEC5gBVMPAABjVldRbt8YpINAAQDwP5R/RoBAAQAQuki4QGyhA4ECAGAZ9RxhCBQAACsuUv6ZdMisESgAAA4gz/GWESgAAI5CnuNtIlAAADwC4cKtURgoFBF7twsA9FhJXLi/v3/58qX/qXt/f79h03Bh2vau0LcbBwCk7Jg/wz7//PO7u7sXL15s0J7d6euG1F2PuncIANK3Ei7897///fDDD+XrW/h81tcNqbsede8QAOQitm+1e/wWPp/1dUMKcxQAALt4+/bt3k3A5WkLfPSFcgCQkfmgAiMKuVO4zTQAYHeus3z//v2+LcGZmHoAAFzMb7/99vnnn//tb3979erVu3fvXr169fe///2zzz779ddflf2dfTsIFAAAF/PixYu7u7unT59WVfXs2bOqqj7++OO7u7tPPvlk76bhRNqmUvRNDgFApqy1VVXt3Yqt6euG1F1PfC2vsisFACRIX6CgMJlR2TsEAMCOyFEAAABRBAoAACCKQAEAAEQRKAAAgCgCBQAAEEWgAAAAoggUAABAlMI6CrGaS9RXAADgsRQGCgQEAABcClMPAAAgikABAABEESgAAICoq+cotG1rjKmqamWz0bZtZTdSOfjgfwWnats2051M89pkjNZeD629noxam1FTDa29JVccUbDWFkVhrbXW1nU9DwJEURRd1xljuq7zFyy4p8t/uVDAWjsMw/WaDQAAnCsGWdK1S0/ftm3XdfPXqqpqGAb3uP+UoijKspSvJdSQw2KnEnmFjbT2emjt9dDaK8moqYbWpvFa27ji9RRF0fe9GwkIvnUPNk3jBhv8gCB2r/1gYvFFM3qHaO310NrrobVXklFTDa1N47W2ca2pB+nIg7Ag1rvPD3BftG0raQr+YcMwFA8OnhMAAJxs01UP8069aRpJUBDuazf74FIcXMwhCQp93/d9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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "input_line_326:2:3: error: use of undeclared identifier 'myexpo'\n",
      " (myexpo->Draw(\"SAME\"))\n",
      "  ^\n",
      "Error in <HandleInterpreterException>: Error evaluating expression (myexpo->Draw(\"SAME\"))\n",
      "Execution of your code was aborted.\n"
     ]
    }
   ],
   "source": [
    "//TF1 *myexpo = new TF1(\"myexpo\",\"[0]*TMath::Exp(-[1]*x)\",-1,0.3);\n",
    "TCanvas * can = new TCanvas(\"can\",\"\");\n",
    "can->DrawFrame(-0.5,0.96,0.1,1.01);\n",
    "//myexpo->SetParameters(0.3,0.1);\n",
    "Normalized_rate->Draw(\"ALP\");\n",
    "//Normalized_rate->Fit(\"myexpo\",\"\",\"\");\n",
    "\n",
    "Normalized_rate->SetLineColor(kBlack);\n",
    "myexpo->Draw(\"SAME\");\n",
    "can->Draw();\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "cb2b6b42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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AACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCOCIEAAAA7IgQCAADsiBAIAACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCOCIEAAAA7IgQCAADsiBAIAACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCOCIEAAAA7IgQCAADsiBAIAACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCOCIEAAAA7IgQCAADsiBAIAACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCOCIEAAAA7IgQCAADsiBAIAACwI0IgAADAjgiBAAAAOyIEAgAA7IgQCAAAsCNCIAAAwI4IgQAAADsiBAIAAOyIEAgAALAjQiAAAMCO/H+qkJ3Hr/z1hgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3001] Required argument not present\n",
      "Warning in <TCanvas::Constructor>: Deleting canvas with same name: canvas\n"
     ]
    }
   ],
   "source": [
    "gStyle->SetPalette(100);\n",
    "TFile *raw_file = TFile::Open(\"raw_data.root\");\n",
    "//raw_file->ls();\n",
    "\n",
    "TGraphErrors * flat_target_A1 = (TGraphErrors*) raw_file->Get(\"flat.target.A1averagerates_vs_x\");\n",
    "TGraphErrors * flat_target_A2 = (TGraphErrors*) raw_file->Get(\"flat.target.A2averagerates_vs_x\");\n",
    "TGraphErrors * flat_target_A3 = (TGraphErrors*) raw_file->Get(\"flat.target.A3averagerates_vs_x\");\n",
    "TGraphErrors * flat_target_A4 = (TGraphErrors*) raw_file->Get(\"flat.target.A4averagerates_vs_x\");\n",
    "\n",
    "\n",
    "TGraphErrors * fifteen_target_A1 = (TGraphErrors*) raw_file->Get(\"15deg.target.A1averagerates_vs_x\");\n",
    "TGraphErrors * fifteen_target_A2 = (TGraphErrors*) raw_file->Get(\"15deg.target.A2averagerates_vs_x\");\n",
    "TGraphErrors * fifteen_target_A3 = (TGraphErrors*) raw_file->Get(\"15deg.target.A3averagerates_vs_x\");\n",
    "TGraphErrors * fifteen_target_A4 = (TGraphErrors*) raw_file->Get(\"15deg.target.A4averagerates_vs_x\");\n",
    "\n",
    "\n",
    "TGraphErrors * thirty_target_A1 = (TGraphErrors*) raw_file->Get(\"30deg.target.A1averagerates_vs_x\");\n",
    "TGraphErrors * thirty_target_A2 = (TGraphErrors*) raw_file->Get(\"30deg.target.A2averagerates_vs_x\");\n",
    "TGraphErrors * thirty_target_A3 = (TGraphErrors*) raw_file->Get(\"30deg.target.A3averagerates_vs_x\");\n",
    "TGraphErrors * thirty_target_A4 = (TGraphErrors*) raw_file->Get(\"30deg.target.A4averagerates_vs_x\");\n",
    "\n",
    "\n",
    "TGraphErrors * forty_target_A1 = (TGraphErrors*) raw_file->Get(\"40deg.target.A1averagerates_vs_x\");\n",
    "TGraphErrors * forty_target_A2 = (TGraphErrors*) raw_file->Get(\"40deg.target.A2averagerates_vs_x\");\n",
    "TGraphErrors * forty_target_A3 = (TGraphErrors*) raw_file->Get(\"40deg.target.A3averagerates_vs_x\");\n",
    "TGraphErrors * forty_target_A4 = (TGraphErrors*) raw_file->Get(\"40deg.target.A4averagerates_vs_x\");\n",
    "\n",
    "\n",
    "TGraphErrors * fortyfive_target_A1 = (TGraphErrors*) raw_file->Get(\"45deg.target.A1averagerates_vs_x\");\n",
    "TGraphErrors * fortyfive_target_A2 = (TGraphErrors*) raw_file->Get(\"45deg.target.A2averagerates_vs_x\");\n",
    "TGraphErrors * fortyfive_target_A3 = (TGraphErrors*) raw_file->Get(\"45deg.target.A3averagerates_vs_x\");\n",
    "TGraphErrors * fortyfive_target_A4 = (TGraphErrors*) raw_file->Get(\"45deg.target.A4averagerates_vs_x\");\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "for (int i =0 ; i< flat_target_A1->GetN();i++ ){\n",
    "    float new_x = flat_target_A1->GetX()[i]+98.75;\n",
    "     float new_x2 = fifteen_target_A1->GetX()[i]+106;\n",
    "     float new_x3 = thirty_target_A1->GetX()[i]+112.9;\n",
    "     float new_x4 = forty_target_A1->GetX()[i]+117.3;\n",
    "     float new_x5 = fortyfive_target_A1->GetX()[i]+118.37;\n",
    "    \n",
    "    \n",
    "    flat_target_A1->GetX()[i] = new_x; \n",
    "    fifteen_target_A1->GetX()[i] = new_x2;\n",
    "    thirty_target_A1->GetX()[i] = new_x3;\n",
    "    forty_target_A1->GetX()[i] = new_x4;\n",
    "    fortyfive_target_A1->GetX()[i] = new_x5;\n",
    "    \n",
    "    //cout << \"new \"  <<  flat_target_A1->GetX()[i]<< endl;\n",
    "    \n",
    "    \n",
    "}\n",
    "\n",
    "TCanvas * canvas = new TCanvas(\"canvas\", \"\",1200,1200);\n",
    "\n",
    "fifteen_target_A1->SetLineColor(54);\n",
    "thirty_target_A1->SetLineColor(64);\n",
    "forty_target_A1->SetLineColor(96);\n",
    "fortyfive_target_A1->SetLineColor(32);\n",
    "flat_target_A1->SetLineWidth(3);\n",
    "fifteen_target_A1->SetLineWidth(3);\n",
    "thirty_target_A1->SetLineWidth(3);\n",
    "forty_target_A1->SetLineWidth(3);\n",
    "fortyfive_target_A1->SetLineWidth(3);\n",
    "\n",
    "flat_target_A1->SetName(\"0 deg A1\");\n",
    "fifteen_target_A1->SetName(\"15 deg A1\");\n",
    "thirty_target_A1->SetName(\"30 deg A1\");\n",
    "forty_target_A1->SetName(\"40 deg A1\");\n",
    "canvas->DrawFrame(-3,0,3.,28000);\n",
    "canvas->cd();\n",
    "//canvas->SetLeftMargin(0.2);\n",
    "flat_target_A1->Draw(\"\");\n",
    "fifteen_target_A1->Draw(\"SAME\");\n",
    "thirty_target_A1->Draw(\"SAME\");\n",
    "forty_target_A1->Draw(\"SAME\");\n",
    "fortyfive_target_A1->Draw(\"SAME\");\n",
    "//canvas->BuildLegend(0.5,0.6,0.9,0.8);\n",
    "TLegend * legend = new TLegend(0.75,0.5,0.9,0.8);\n",
    "legend->SetHeader(\" Angles \",\"\");\n",
    "legend->SetBorderSize(0);\n",
    "legend->AddEntry(flat_target_A1,\" 0  \",\"le\");\n",
    "legend->AddEntry(fifteen_target_A1,\" 15  \",\"le\");\n",
    "legend->AddEntry(thirty_target_A1,\" 30  \",\"le\");\n",
    "legend->AddEntry(forty_target_A1,\" 40  \",\"le\");\n",
    "legend->AddEntry(fortyfive_target_A1,\" 45  \",\"le\");\n",
    "\n",
    "legend->Draw();\n",
    "canvas->Draw();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "1105ca94",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "flat\n",
      "flat.target.A1.averagerates_vs_x\n",
      "flat.target.A2.averagerates_vs_x\n",
      "flat.target.A3.averagerates_vs_x\n",
      "flat.target.A4.averagerates_vs_x\n",
      "15deg\n",
      "15deg.target.A1.averagerates_vs_x\n",
      "15deg.target.A2.averagerates_vs_x\n",
      "15deg.target.A3.averagerates_vs_x\n",
      "15deg.target.A4.averagerates_vs_x\n",
      "30deg\n",
      "30deg.target.A1.averagerates_vs_x\n",
      "30deg.target.A2.averagerates_vs_x\n",
      "30deg.target.A3.averagerates_vs_x\n",
      "30deg.target.A4.averagerates_vs_x\n",
      "40deg\n",
      "40deg.target.A1.averagerates_vs_x\n",
      "40deg.target.A2.averagerates_vs_x\n",
      "40deg.target.A3.averagerates_vs_x\n",
      "40deg.target.A4.averagerates_vs_x\n",
      "45deg\n",
      "45deg.target.A1.averagerates_vs_x\n",
      "45deg.target.A2.averagerates_vs_x\n",
      "45deg.target.A3.averagerates_vs_x\n",
      "45deg.target.A4.averagerates_vs_x\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "input_line_129:2:2: warning: 'list' shadows a declaration with the same name in the 'std' namespace; use '::list' to reference this declaration\n",
      " const char *list[5] = {\"flat\", \"15deg\", \"30deg\", \"40deg\", \"45deg\"};\n",
      " ^\n"
     ]
    }
   ],
   "source": [
    "const char *list[5] = {\"flat\", \"15deg\", \"30deg\", \"40deg\", \"45deg\"};\n",
    "\n",
    "for (int k=0; k< 5;k++){\n",
    "    cout << list[k]<< endl;\n",
    "    const char *list2[4] ={\"A1\",\"A2\",\"A3\",\"A4\"};\n",
    "    for(int j = 0;j <4 ; j++){\n",
    "        \n",
    "        cout << Form(\"%s.target.%s.averagerates_vs_x\",list[k],list2[j])<< endl;\n",
    "        \n",
    "        TGraphErrors * mygraph = (TGraphErrors*) raw_file->Get(Form(\"%s.target.%saveragerates_vs_x\",list[k],list2[j]));\n",
    "        for(int l =0; l <mygraph->GetN(); l++){\n",
    "            \n",
    "            \n",
    "        }\n",
    "    }//sensor loop;\n",
    "    //TGraphErrors * mygraphA1 = (TGraphErrors*) raw_file->Get(Form(\"%s.target.A1averagerates_vs_x\"))\n",
    "    \n",
    "}//angle loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "300e3481",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a1830c0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b97d1e9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08b234d0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "@webio": {
   "lastCommId": null,
   "lastKernelId": null
  },
  "kernelspec": {
   "display_name": "ROOT C++",
   "language": "c++",
   "name": "root"
  },
  "language_info": {
   "codemirror_mode": "text/x-c++src",
   "file_extension": ".C",
   "mimetype": " text/x-c++src",
   "name": "c++"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
